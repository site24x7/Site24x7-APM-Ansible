- name: Check if '/opt/apminsight-ansible.yml' file exists
  stat:
    path: /opt/apminsight-ansible.yml
  register: props_file_exists
 
- name: Reading the installation properties file from '/opt/apminsight-ansible.yml'
  command: cat /opt/apminsight-ansible.yml
  register: apminsight_ansible_props
  when: props_file_exists.stat.exists
  

- name: Display installation properties raw content
  debug:
         msg: '\n {{apminsight_ansible_props.stdout}}'
  when: props_file_exists.stat.exists
  
  
- name: Formatting installation properties
  set_fact:
     install_props: "{{ (apminsight_ansible_props.stdout| from_yaml).install_props }}"
  when: props_file_exists.stat.exists and (apminsight_ansible_props is defined)

    
- name: Displaying formatted installation properties
  debug:
         msg: 'Installation properties are {{install_props}}'
  when: props_file_exists.stat.exists and (apminsight_ansible_props is defined) and (install_props is defined)
         
         
- name: Check if jvm config file exists in the location path
  stat:
    path: "{{ install_props.jvm_config_file }}"
  register: config_file_exists
  when: props_file_exists.stat.exists and (install_props is defined)

  
- name: Delete line from config file
  lineinfile:
    path: "{{ install_props.jvm_config_file }}"
    state: absent
    regexp: '.*apminsight-javaagent\.jar.*'
  when:
    - props_file_exists.stat.exists
    - config_file_exists.stat is defined and config_file_exists.stat.exists
  notify:
    - web_server_restart
  changed_when: true #for forcing the handler to run irrespective of changes
